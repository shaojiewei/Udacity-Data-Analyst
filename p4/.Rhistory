#coord_cartesian(xlim = c(0,10000), ylim = c(0, 5e+4))
geom_point(alpha = 1/20,position = position_jitter(h = 0),color = 'orange')
ggplot(aes(likes, www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,10000), ylim = c(0, 5e+4))
geom_point(alpha = 1/20,position = position_jitter(h = 0),color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(13,70), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.1),
linetype = 2, color = 'blue')+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.5),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.9),
linetype = 2, color = 'blue')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.1),
linetype = 2, color = 'blue')+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.5),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.9),
linetype = 2, color = 'blue')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(likes, www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,10000), ylim = c(0, 1000))
geom_point(alpha = 1/20,position = position_jitter(h = 0),color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,10000), ylim = c(0, 1000))
geom_point(alpha = 1/20,position = position_jitter(h = 0),color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0, 1000))
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0, 1000))+
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = likes, y = www_likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0, 1000))+
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
coord_cartesian(xlim = c(0,5000), ylim = c(0,10000))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,5000), ylim = c(0,10000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,5000), ylim = c(0,10000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,5000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,1000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange')
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,1000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
#geom_point() +
coord_cartesian(xlim = c(0,1000), ylim = c(0,1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean)+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.1),
linetype = 2, color = 'blue')+
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.5),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(.9),
linetype = 2, color = 'blue')
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))+
geom_smooth(method = 'lm', color = 'red')
with(pf, cor.test(pf$www_likes_received,pf$likes_received))
install.packages('alr3')
library(alr3)
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
library(ggplot2)
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
cor.test(Month,Temp)
cor.test(Mitchell$Month,Mitchell$Temp)
range(Mitchell$Month)
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()+
scale_x_continuous(breaks = seq(0,203,12))
ggplot(aes(age,friend_count_mean),data = pf.fc_by_age) +
geom_line()
pf$age_with_month <- pf$age + (1 - pf$dob_month / 12)
getwd()
pf <- read.csv('D:/Udacity/DAND/p4/pseudo_facebook.tsv', seq = '\t')
pf <- read.csv('D:/Udacity/DAND/p4/pseudo_facebook.tsv', sep = '\t')pseudo_facebook.tsv
pf <- read.csv('D:/Udacity/DAND/p4/pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('D:/Udacity/DAND/p4/pseudo_facebook.tsv', sep = '\t')
with(subset(pf, tenure >= 1), summary(friend_count /tenure))
ggplot(aes(x = tenure, y = friend_initiated /tenure), data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
library(ggplot2)
ggplot(aes(x = tenure, y = friend_initiated /tenure), data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) +
geom_boxplot()+
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender, stat = 'summary', fun.y = median))
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
library(dplyr)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
install.packages('dplyr')
install.packages("dplyr")
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
library(ggplot2)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
head(pf.fc_by_age_gender.wide)
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype = 2)
pf$year_joined <- floor(2014 - pf$tenure / 365)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
View(pf)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median())
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2)
library(ggplot2)
ggplot(aes(x = tenure, y = friend_initiated /tenure), data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated /tenure), data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
yo <- read.csv('yogurt.csv')
View(yo)
str(yo)
yo$id <- factor(yo$id)
str(yo)
View(yo)
str(yo)
library(ggplot2)
ggplot(aes(x = id)) +
geom_histogram()
library(ggplot2)
ggplot(aes(x = id), data = yo) +
geom_histogram()
ggplot(aes(x = price), data = yo) +
geom_histogram()
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
summary(yo$all.purchases)
qplot(x = all.purchases, data =  yo, binwidth = 1, fill = I('#099DD9'))
ggplot(aes(x = time, y = price), data = yo) +
geom_point()
ggplot(aes(x = time, y = price), data = yo) +
geom_point()+
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
ggplot(aes(x = time, y = price), data = yo) ++
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.ids)) +
facet_wrap(~ id)+
geom_line()+
geom_point(aes(size = all.purchases), pch = 1)
install.packages('GGally')
install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
library(GGally)
theme_set(theme_minimal(20))
set.seed(1836)
pf_subset <- pf[, c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),])
set.seed(1836)
pf_subset <- pf[, c(2:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),axisLabels = 'internal'])
pf_subset <- pf[, c(2:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),])
pf_subset <- pf[, c(2:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000,axisLabels = 'internal'),])
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),axisLabels = 'internal'])
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
pf_subset <- pf[, c(4:7)]
pf_subset <- pf[, c(4:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
pf_subset <- pf[, c(4:15)]
pf_subset <- pf[, c(4:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
pf_subset <- pf[, c(6:10)]
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
View(pf_subset)
pf_subset <- pf[, c(2:10)]
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
pf_subset <- pf[, c(2:15)]
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
set.seed(1836)
pf_subset <- pf[, c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
set.seed(1836)
pf_subset <- pf[, c(2:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),],axisLabels = 'internal')
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(1836)
pf_subset <- pf[, c(2:15)]
set.seed(42)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(1836)
set.seed(1836)
pf_subset <- pf[, c(2:15)]
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(friendships_initiated, friend_count, method = "pearson"))
set.seed(1836)
with(pf_subset[sample.int(nrow(pf_subset), 1000), ],
cor.test(age, mobile_likes, method = "pearson"))
getwd()
nci <- read.table('nci.tsv')
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
install.packages('reshape2')
library(reshape2)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
library(ggplot2)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
getwd()
setwd('D:/Udacity/DAND/p4')
setwd('D:/Udacity/DAND/p4')
data("diamonds")
data("diamonds")
library(ggplot2)
ggplot(aes(x = price, fill=cut), data = diamonds) + geom_histogram() +
facet_wrap(~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual')
View(diamonds)
ggplot(aes(x = table, fill = cut), data = diamonds) +
geom_point()+
facet_wrap(~ color)
ggplot(aes(x = table, fill = cut, y = price), data = diamonds) +
geom_point()+
facet_wrap(~ color)
ggplot(aes(x = table, fill = cut, y = price), data = diamonds) +
geom_point()+
facet_wrap(~ color)+
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, fill = cut, y = price), data = diamonds) +
geom_jitter()+
facet_wrap(~ color)+
scale_fill_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')
??breaks
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
scale_x_continuous(limits = c(50, 70, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
scale_x_continuous(limits = c(50, 70, 1),breaks = c(50,70, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
scale_x_continuous(limits = c(50, 70, 1),breaks = seq(50,70, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
scale_x_continuous(breaks = seq(50,70, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
scale_x_continuous(limits = c(50,70,1),breaks = seq(50,70, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
coord_cartesian(xlim = c(50,65))
scale_x_continuous(breaks = seq(50,65, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
coord_cartesian(xlim = c(50,65,1))
scale_x_continuous(breaks = seq(50,65, 1))
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')
ggplot(data = diamonds, aes(x = table, y = price)) +
geom_jitter(alpha = 1,  aes(color = cut)) +
scale_color_brewer(type = 'qual')+
coord_cartesian(xlim = c(50,65))
scale_x_continuous(breaks = seq(50,65, 1))
diamonds$volume <- diamonds$x*diamonds$y*diamonds$z
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))+
coord_cartesian(xlim = c(0,500)) +
scale_x_continuous(breaks = seq(0, 500,50))
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))+
coord_cartesian(xlim = c(0,500)) +
scale_x_continuous(breaks = seq(0, 500,50))+
scale_color_brewer(type = 'div')
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))+
coord_cartesian(xlim = c(0,500)) +
scale_x_continuous(breaks = seq(0, 500,100))+
scale_color_brewer(type = 'div')
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))+
scale_y_log10()+
coord_cartesian(xlim = c(0,500)) +
scale_x_continuous(breaks = seq(0, 500,100))+
scale_color_brewer(type = 'div')
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_jitter(aes(color = clarity))+
scale_y_log10()+
coord_cartesian(xlim = c(0,300)) +
scale_x_continuous(breaks = seq(0, 300,100))+
scale_color_brewer(type = 'div')
pf <- read.csv('pseudo_facebook.tsv')
View(pf)
pf <- read.csv('pseudo_facebook.tsv', seq = '\t')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
View(pf)
pf <- transform(pf, prop_initiated = ifelse(friend_count == 0, 0, friendships_initiated/friend_count))
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012, 2014))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, tenure >1)) +
geom_line(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated /tenure), data = pf) +
geom_line(aes(color = year_joined.bucket))
